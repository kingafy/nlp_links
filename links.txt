https://towardsdatascience.com/how-to-do-text-binary-classification-with-bert-f1348a25d905
https://github.com/wshuyi/demo-text-binary-classification-with-bert/blob/master/bert_text_classification.ipynb

https://towardsdatascience.com/bert-text-classification-in-3-lines-of-code-using-keras-264db7e7a358

https://blog.ekbana.com/fine-tuning-bert-for-text-classification-20news-group-classification-53a55dc09738

https://www.analyticsvidhya.com/blog/2019/09/demystifying-bert-groundbreaking-nlp-framework/
https://github.com/hb20007/hands-on-nltk-tutorial

https://github.com/ines/spacy-course

https://www.analyticsvidhya.com/blog/2017/01/ultimate-guide-to-understand-implement-natural-language-processing-codes-in-python/

https://medium.com/@glmack/patent-language-processing-fc99b57c0cd5

http://www.academia.edu/Documents/in/Natural_Language_Processing

https://github.com/google-research/bert
https://github.com/facebookresearch/SentEval/tree/master/data/probing

https://github.com/llhthinker/NLP-Papers
https://github.com/mhagiwara/100-nlp-papers
https://github.com/astorfi/Deep-Learning-NLP
https://paperswithcode.com/

https://fasttext.cc/docs/en/english-vectors.html


https://github.com/binoydutt/Resume-Job-Description-Matching/blob/master/step2_getresume.py
https://medium.com/@everisBrasil/using-machine-learning-to-retrieve-relevant-cvs-based-on-job-description-57fc31623845
https://www.sciencedirect.com/science/article/pii/S0885230817302851
https://www.softwarelab.it/2018/10/12/adding-an-existing-project-to-github-using-the-command-line/







GIT commands

    Create a new repository on GitHub. You can also add a gitignore file, a readme and a licence if you want
     Open Git Bash
    Change the current working directory to your local project.
    Initialize the local directory as a Git repository.
    git init
    Add the files in your new local repository. This stages them for the first commit.
    git add .
     Commit the files that youâ€™ve staged in your local repository.
    git commit -m "initial commit"
     Copy the https url of your newly created repo
    In the Command prompt, add the URL for the remote repository where your local repository will be pushed.

    git remote add origin remote repository URL

    git remote -v
     Push the changes in your local repository to GitHub.

    git push -f origin master
